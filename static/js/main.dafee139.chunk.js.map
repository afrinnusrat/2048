{"version":3,"sources":["TitleRow.js","Selector.js","Commands.js","constant.js","Board.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["TitleRow","render","AppBar","position","className","Typography","variant","component","props","winCondition","sum","best","Component","Selector","valuetext","value","toggleDisplayRow","setState","curState","displayRow","handleChange","event","newValue","stopPropagation","handleConfirm","newGrid","state","handleChangeGrid","Button","onClick","Slider","getAriaValueText","aria-labelledby","valueLabelDisplay","step","min","max","marks","onChange","label","startSize","JSON","parse","window","localStorage","getItem","Commands","openDialog","showDialog","handleCloseDialog","handleReset","Badge","badgeContent","numberOfUndos","color","IconButton","handleUndo","Dialog","open","onClose","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","autoFocus","colorPalette","1","2","3","4","5","6","7","8","9","10","11","Board","size","board","style","gridTemplateColumns","gridTemplateRows","map","block","Paper","backgroundColor","getColor","key","row","col","compareThis","Math","log2","palette","parseInt","Game","componentDidMount","allBoards","some","startGame","handleInput","eventData","input","dir","goRight","goLeft","goUp","goDown","handleSnackbarClose","snackbar","find","ele","gridSize","setItem","stringify","newAllBoards","options","choices","startValues","length","curChoice","floor","random","includes","push","forEach","choice","_","sumBy","filter","changeThisIndex","findIndex","oldBoard","cols","newBoard","tempNew","i","filteredCurValues","mergedCurValues","index","j","isEqual","history","shift","needToWin","checkForWin","addRandomNumber","unshift","rows","newNumber","changeThisElement","indexOfChangedElement","curBoard","pop","winDialog","handleDialogClose","allBoardsWithCurrentGridSize","onSwiped","tabIndex","onKeyDown","isBrowser","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","action","Fragment","aria-label","fontSize","upperLimit","lowerLimit","winConditions","condition","startAllBoards","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.dafee139.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./stylesheets/TitleRow.css\";\r\n\r\nclass TitleRow extends Component {\r\n  render = () => {\r\n    return (\r\n      <AppBar position=\"sticky\">\r\n        <div className=\"TitleRow\">\r\n          <Typography variant=\"h4\" component=\"h1\">\r\n            {this.props.winCondition}\r\n          </Typography>\r\n          <div>\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              Sum\r\n            </Typography>\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {this.props.sum}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              Best\r\n            </Typography>\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {this.props.best}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </AppBar>\r\n    );\r\n  };\r\n}\r\n\r\nexport default TitleRow;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport \"./stylesheets/Selector.css\";\r\n\r\nclass Selector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // for slider\r\n    this.marks = [\r\n      {\r\n        value: 3,\r\n        label: \"3\",\r\n      },\r\n      {\r\n        value: 4,\r\n        label: \"4\",\r\n      },\r\n      {\r\n        value: 5,\r\n        label: \"5\",\r\n      },\r\n      {\r\n        value: 6,\r\n        label: \"6\",\r\n      },\r\n      {\r\n        value: 7,\r\n        label: \"7\",\r\n      },\r\n      {\r\n        value: 8,\r\n        label: \"8\",\r\n      },\r\n    ];\r\n    const startSize = JSON.parse(window.localStorage.getItem(\"gridSize\")) || 4;\r\n    this.state = {\r\n      displayRow: false,\r\n      value: startSize,\r\n    };\r\n  }\r\n  // for ARIA\r\n  valuetext = (value) => {\r\n    return `{value}`;\r\n  };\r\n  toggleDisplayRow = () => {\r\n    this.setState((curState) => {\r\n      if (curState.displayRow === true) {\r\n        return { displayRow: false };\r\n      } else {\r\n        return { displayRow: true };\r\n      }\r\n    });\r\n  };\r\n  handleChange = (event, newValue) => {\r\n    event.stopPropagation();\r\n    this.setState(() => {\r\n      return {\r\n        value: newValue,\r\n      };\r\n    });\r\n  };\r\n  handleConfirm = () => {\r\n    const newGrid = this.state.value;\r\n    this.props.handleChangeGrid(newGrid);\r\n    this.toggleDisplayRow();\r\n  };\r\n  render = () => {\r\n    return (\r\n      <div className=\"Selector\">\r\n        <Button onClick={this.toggleDisplayRow}>Change Grid Size</Button>\r\n        {this.state.displayRow && (\r\n          <div className=\"Selector-secondRow\">\r\n            <Slider\r\n              value={this.state.value}\r\n              getAriaValueText={this.valuetext}\r\n              aria-labelledby=\"grid-size-adjust-slider\"\r\n              valueLabelDisplay=\"off\"\r\n              step={1}\r\n              min={3}\r\n              max={8}\r\n              marks={this.marks}\r\n              onChange={this.handleChange}\r\n            />\r\n            <Button onClick={this.handleConfirm}>Confirm</Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Selector;\r\n","import React, { Component } from \"react\";\r\nimport Replay from \"@material-ui/icons/Replay\";\r\nimport CachedIcon from \"@material-ui/icons/Cached\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport \"./stylesheets/Commands.css\";\r\n\r\nclass Commands extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showDialog: false,\r\n    };\r\n  }\r\n  openDialog = () => {\r\n    this.setState(() => {\r\n      return { showDialog: true };\r\n    });\r\n  };\r\n  handleCloseDialog = () => {\r\n    this.setState(() => {\r\n      return { showDialog: false };\r\n    });\r\n  };\r\n  handleConfirm = () => {\r\n    this.props.handleReset();\r\n    this.handleCloseDialog();\r\n  };\r\n  render = () => {\r\n    return (\r\n      <div className=\"Commands\">\r\n        <Badge badgeContent={this.props.numberOfUndos} color=\"primary\">\r\n          <IconButton onClick={this.props.handleUndo}>\r\n            <Replay />\r\n          </IconButton>\r\n        </Badge>\r\n\r\n        <IconButton onClick={this.openDialog}>\r\n          <CachedIcon />\r\n        </IconButton>\r\n\r\n        <Dialog\r\n          open={this.state.showDialog}\r\n          onClose={this.handleCloseDialog}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">Confirm Reset?</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Current Progess will be lost.\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleCloseDialog} color=\"primary\">\r\n              Disagree\r\n            </Button>\r\n            <Button onClick={this.handleConfirm} color=\"primary\" autoFocus>\r\n              Agree\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Commands;\r\n","const colorPalette = {\r\n  1: \"#66bb6a\",\r\n  2: \"#26a69a\",\r\n  3: \"#26c6da\",\r\n  4: \"#29b6f6\",\r\n  5: \"#42a5f5\",\r\n  6: \"#5c6bc0\",\r\n  7: \"#7e57c2\",\r\n  8: \"#ffca28\",\r\n  9: \"#ab47bc\",\r\n  10: \"#ec407a\",\r\n  11: \"#ef5350\",\r\n};\r\nexport default colorPalette;\r\n","import React, { Component } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"./stylesheets/Board.css\";\r\nimport colorPalette from \"./constant\";\r\nclass Board extends Component {\r\n  getColor(value) {\r\n    let compareThis = Math.log2(value);\r\n    while (compareThis > 11) {\r\n      compareThis -= 11;\r\n    }\r\n    for (let palette in colorPalette) {\r\n      if (parseInt(palette) === compareThis) {\r\n        return colorPalette[palette];\r\n      }\r\n    }\r\n  }\r\n\r\n  render = () => {\r\n    const { size, board } = this.props;\r\n    return (\r\n      <div\r\n        className=\"Board\"\r\n        style={{\r\n          gridTemplateColumns: `repeat(${size}, 1fr)`,\r\n          gridTemplateRows: `repeat(${size}, 1fr)`,\r\n        }}\r\n      >\r\n        {board.map((block) => {\r\n          return (\r\n            <Paper\r\n              style={{\r\n                backgroundColor: this.getColor(block.value),\r\n                color: \"#FFF\",\r\n              }}\r\n              key={`${block.row}-${block.col}`}\r\n              className=\"Board-block\"\r\n            >\r\n              <Typography> {block.value} </Typography>\r\n            </Paper>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component } from \"react\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport { isBrowser } from \"react-device-detect\";\r\nimport _ from \"lodash\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport \"./stylesheets/Game.css\";\r\nimport TitleRow from \"./TitleRow\";\r\nimport Selector from \"./Selector\";\r\nimport Commands from \"./Commands\";\r\nimport Board from \"./Board\";\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    // JSON.parse(window.localStorage.getItem(\"jokes\") || \"[]\")\r\n    super(props);\r\n    // change this to change default grid size.\r\n    const startSize = JSON.parse(window.localStorage.getItem(\"gridSize\")) || 4;\r\n    // change this to change upper and lower limits of grid sizes.\r\n    this.upperLimit = 8;\r\n    this.lowerLimit = 3;\r\n    // messy way to fix the special case of 3x3 grid having 1024 as win condition.\r\n    this.winConditions = [\r\n      { size: 3, condition: 1024 },\r\n      { size: 4, condition: 2048 },\r\n      { size: 5, condition: 2048 },\r\n      { size: 6, condition: 2048 },\r\n      { size: 7, condition: 2048 },\r\n      { size: 8, condition: 2048 },\r\n    ];\r\n    const allBoards = [];\r\n    for (let i = this.lowerLimit; i <= this.upperLimit; i++) {\r\n      allBoards.push({\r\n        size: i,\r\n        board: [],\r\n        sum: 0,\r\n        best: 0,\r\n        history: [],\r\n        winCondition: this.winConditions.find((ele) => ele.size === i)\r\n          .condition,\r\n        needToWin: true,\r\n      });\r\n    }\r\n    allBoards.forEach((board) => {\r\n      for (let i = 1; i <= board.size; i++) {\r\n        for (let j = 1; j <= board.size; j++) {\r\n          board.board.push({ row: i, col: j, value: \"\" });\r\n        }\r\n      }\r\n    });\r\n    const startAllBoards =\r\n      JSON.parse(window.localStorage.getItem(\"allBoards\")) || allBoards;\r\n    this.state = {\r\n      gridSize: startSize,\r\n      allBoards: startAllBoards,\r\n      snackbar: true,\r\n      winDialog: false,\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    if (!this.state.allBoards.some((board) => board.sum > 0)) {\r\n      this.startGame();\r\n    }\r\n  };\r\n  handleInput = (eventData) => {\r\n    let input = \"\";\r\n    if (eventData.dir) {\r\n      input = eventData.dir;\r\n    } else if (eventData.key) {\r\n      input = eventData.key;\r\n    }\r\n\r\n    if (\r\n      input === \"Right\" ||\r\n      input === \"d\" ||\r\n      input === \"D\" ||\r\n      input === \"ArrowRight\"\r\n    ) {\r\n      this.goRight();\r\n    } else if (\r\n      input === \"Left\" ||\r\n      input === \"a\" ||\r\n      input === \"A\" ||\r\n      input === \"ArrowLeft\"\r\n    ) {\r\n      this.goLeft();\r\n    } else if (\r\n      input === \"Up\" ||\r\n      input === \"w\" ||\r\n      input === \"W\" ||\r\n      input === \"ArrowUp\"\r\n    ) {\r\n      this.goUp();\r\n    } else if (\r\n      input === \"Down\" ||\r\n      input === \"s\" ||\r\n      input === \"S\" ||\r\n      input === \"ArrowDown\"\r\n    ) {\r\n      this.goDown();\r\n    }\r\n  };\r\n  handleSnackbarClose = () => {\r\n    this.setState(() => {\r\n      return { snackbar: false };\r\n    });\r\n  };\r\n  handleChangeGrid = (newGrid) => {\r\n    let board = this.state.allBoards.find((ele) => ele.size === newGrid);\r\n    this.setState(\r\n      () => {\r\n        return { gridSize: newGrid };\r\n      },\r\n      () => {\r\n        window.localStorage.setItem(\"gridSize\", JSON.stringify(newGrid));\r\n        if (board.sum === 0) {\r\n          this.startGame();\r\n        }\r\n      }\r\n    );\r\n  };\r\n  startGame = () => {\r\n    const newAllBoards = JSON.parse(JSON.stringify(this.state.allBoards));\r\n    const options = [\r\n      ...newAllBoards.find((ele) => ele.size === this.state.gridSize).board,\r\n    ];\r\n    const choices = [];\r\n    // change this to change probability of 2 or 4 while start.\r\n    const startValues = [2, 2, 2, 2, 4];\r\n    while (choices.length !== 2) {\r\n      let curChoice = Math.floor(Math.random() * options.length);\r\n      if (!choices.includes(curChoice)) {\r\n        choices.push(curChoice);\r\n      }\r\n    }\r\n    choices.forEach((choice) => {\r\n      options[choice].value =\r\n        startValues[Math.floor(Math.random() * startValues.length)];\r\n    });\r\n    const sum = _.sumBy(\r\n      options.filter((ele) => ele.value),\r\n      \"value\"\r\n    );\r\n    const changeThisIndex = newAllBoards.findIndex(\r\n      (ele) => ele.size === this.state.gridSize\r\n    );\r\n    newAllBoards[changeThisIndex].board = options;\r\n    newAllBoards[changeThisIndex].sum = sum;\r\n    newAllBoards[changeThisIndex].best =\r\n      sum > newAllBoards[changeThisIndex].best\r\n        ? sum\r\n        : newAllBoards[changeThisIndex].best;\r\n    this.setState(\r\n      () => {\r\n        return {\r\n          allBoards: newAllBoards,\r\n        };\r\n      },\r\n      () => {\r\n        window.localStorage.setItem(\"allBoards\", JSON.stringify(newAllBoards));\r\n      }\r\n    );\r\n  };\r\n  goUp = () => {\r\n    const size = this.state.gridSize;\r\n    const allBoards = JSON.parse(JSON.stringify(this.state.allBoards));\r\n    const oldBoard = JSON.parse(\r\n      JSON.stringify(allBoards.find((ele) => ele.size === size).board)\r\n    );\r\n    const board = allBoards.find((ele) => ele.size === size).board;\r\n    const cols = [];\r\n    const newBoard = [];\r\n    const tempNew = [];\r\n    for (let i = 1; i <= size; i++) {\r\n      cols.push(board.filter((ele) => ele.col === i));\r\n    }\r\n    cols.forEach((col) => {\r\n      let curValues = col.map((ele) => ele.value);\r\n      let filteredCurValues = curValues.filter((ele) => ele);\r\n      let mergedCurValues = [];\r\n      for (let i = 0; i < filteredCurValues.length; i++) {\r\n        if (filteredCurValues[i] === filteredCurValues[i + 1]) {\r\n          mergedCurValues.push(filteredCurValues[i] + filteredCurValues[i + 1]);\r\n          i++;\r\n        } else {\r\n          mergedCurValues.push(filteredCurValues[i]);\r\n        }\r\n      }\r\n      while (mergedCurValues.length !== size) {\r\n        mergedCurValues.push(\"\");\r\n      }\r\n      col.forEach((ele, index) => (ele.value = mergedCurValues[index]));\r\n    });\r\n\r\n    for (let i = 0; i < cols.length; i++) {\r\n      tempNew.push(...cols[i]);\r\n    }\r\n    for (let i = 1; i <= size; i++) {\r\n      for (let j = 1; j <= size; j++) {\r\n        newBoard.push(tempNew.find((ele) => ele.row === i && ele.col === j));\r\n      }\r\n    }\r\n    if (!_.isEqual(oldBoard, newBoard)) {\r\n      const changeThisIndex = allBoards.findIndex((ele) => ele.size === size);\r\n      allBoards[changeThisIndex].history.push(oldBoard);\r\n      if (allBoards[changeThisIndex].history.length > 5) {\r\n        allBoards[changeThisIndex].history.shift();\r\n      }\r\n      allBoards[changeThisIndex].board = newBoard;\r\n      this.setState(\r\n        () => {\r\n          return { allBoards };\r\n        },\r\n        () => {\r\n          window.localStorage.setItem(\"allBoards\", JSON.stringify(allBoards));\r\n          if (allBoards[changeThisIndex].needToWin) {\r\n            this.checkForWin();\r\n          } else {\r\n            this.addRandomNumber();\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n  goDown = () => {\r\n    const size = this.state.gridSize;\r\n    const allBoards = JSON.parse(JSON.stringify(this.state.allBoards));\r\n    const oldBoard = JSON.parse(\r\n      JSON.stringify(allBoards.find((ele) => ele.size === size).board)\r\n    );\r\n    const board = allBoards.find((ele) => ele.size === size).board;\r\n    const cols = [];\r\n    const newBoard = [];\r\n    const tempNew = [];\r\n    for (let i = 1; i <= size; i++) {\r\n      cols.push(board.filter((ele) => ele.col === i));\r\n    }\r\n    cols.forEach((col) => {\r\n      let curValues = col.map((ele) => ele.value);\r\n      let filteredCurValues = curValues.filter((ele) => ele);\r\n      let mergedCurValues = [];\r\n      for (let i = filteredCurValues.length - 1; i >= 0; i--) {\r\n        if (filteredCurValues[i] === filteredCurValues[i - 1]) {\r\n          mergedCurValues.unshift(\r\n            filteredCurValues[i] + filteredCurValues[i - 1]\r\n          );\r\n          i--;\r\n        } else {\r\n          mergedCurValues.unshift(filteredCurValues[i]);\r\n        }\r\n      }\r\n      while (mergedCurValues.length !== size) {\r\n        mergedCurValues.unshift(\"\");\r\n      }\r\n      col.forEach((ele, index) => (ele.value = mergedCurValues[index]));\r\n    });\r\n\r\n    for (let i = 0; i < cols.length; i++) {\r\n      tempNew.push(...cols[i]);\r\n    }\r\n    for (let i = 1; i <= size; i++) {\r\n      for (let j = 1; j <= size; j++) {\r\n        newBoard.push(tempNew.find((ele) => ele.row === i && ele.col === j));\r\n      }\r\n    }\r\n    if (!_.isEqual(oldBoard, newBoard)) {\r\n      const changeThisIndex = allBoards.findIndex((ele) => ele.size === size);\r\n      allBoards[changeThisIndex].history.push(oldBoard);\r\n      if (allBoards[changeThisIndex].history.length > 5) {\r\n        allBoards[changeThisIndex].history.shift();\r\n      }\r\n      allBoards[changeThisIndex].board = newBoard;\r\n      this.setState(\r\n        () => {\r\n          return { allBoards };\r\n        },\r\n        () => {\r\n          window.localStorage.setItem(\"allBoards\", JSON.stringify(allBoards));\r\n          if (allBoards[changeThisIndex].needToWin) {\r\n            this.checkForWin();\r\n          } else {\r\n            this.addRandomNumber();\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n  goLeft = () => {\r\n    const size = this.state.gridSize;\r\n    const allBoards = JSON.parse(JSON.stringify(this.state.allBoards));\r\n    const oldBoard = JSON.parse(\r\n      JSON.stringify(allBoards.find((ele) => ele.size === size).board)\r\n    );\r\n    const board = allBoards.find((ele) => ele.size === size).board;\r\n    const rows = [];\r\n    const newBoard = [];\r\n    const tempNew = [];\r\n    for (let i = 1; i <= size; i++) {\r\n      rows.push(board.filter((ele) => ele.row === i));\r\n    }\r\n    rows.forEach((row) => {\r\n      let curValues = row.map((ele) => ele.value);\r\n      let filteredCurValues = curValues.filter((ele) => ele);\r\n      let mergedCurValues = [];\r\n      for (let i = 0; i < filteredCurValues.length; i++) {\r\n        if (filteredCurValues[i] === filteredCurValues[i + 1]) {\r\n          mergedCurValues.push(filteredCurValues[i] + filteredCurValues[i + 1]);\r\n          i++;\r\n        } else {\r\n          mergedCurValues.push(filteredCurValues[i]);\r\n        }\r\n      }\r\n      while (mergedCurValues.length !== size) {\r\n        mergedCurValues.push(\"\");\r\n      }\r\n      row.forEach((ele, index) => (ele.value = mergedCurValues[index]));\r\n    });\r\n    for (let i = 0; i < rows.length; i++) {\r\n      tempNew.push(...rows[i]);\r\n    }\r\n    for (let i = 1; i <= size; i++) {\r\n      for (let j = 1; j <= size; j++) {\r\n        newBoard.push(tempNew.find((ele) => ele.row === i && ele.col === j));\r\n      }\r\n    }\r\n    if (!_.isEqual(oldBoard, newBoard)) {\r\n      const changeThisIndex = allBoards.findIndex((ele) => ele.size === size);\r\n      allBoards[changeThisIndex].history.push(oldBoard);\r\n      if (allBoards[changeThisIndex].history.length > 5) {\r\n        allBoards[changeThisIndex].history.shift();\r\n      }\r\n      allBoards[changeThisIndex].board = newBoard;\r\n      this.setState(\r\n        () => {\r\n          return { allBoards };\r\n        },\r\n        () => {\r\n          window.localStorage.setItem(\"allBoards\", JSON.stringify(allBoards));\r\n          if (allBoards[changeThisIndex].needToWin) {\r\n            this.checkForWin();\r\n          } else {\r\n            this.addRandomNumber();\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n  goRight = () => {\r\n    const size = this.state.gridSize;\r\n    const allBoards = JSON.parse(JSON.stringify(this.state.allBoards));\r\n    const oldBoard = JSON.parse(\r\n      JSON.stringify(allBoards.find((ele) => ele.size === size).board)\r\n    );\r\n    const board = allBoards.find((ele) => ele.size === size).board;\r\n    const rows = [];\r\n    const newBoard = [];\r\n    const tempNew = [];\r\n    for (let i = 1; i <= size; i++) {\r\n      rows.push(board.filter((ele) => ele.row === i));\r\n    }\r\n    rows.forEach((row) => {\r\n      let curValues = row.map((ele) => ele.value);\r\n      let filteredCurValues = curValues.filter((ele) => ele);\r\n      let mergedCurValues = [];\r\n      for (let i = filteredCurValues.length - 1; i >= 0; i--) {\r\n        if (filteredCurValues[i] === filteredCurValues[i - 1]) {\r\n          mergedCurValues.unshift(\r\n            filteredCurValues[i] + filteredCurValues[i - 1]\r\n          );\r\n          i--;\r\n        } else {\r\n          mergedCurValues.unshift(filteredCurValues[i]);\r\n        }\r\n      }\r\n      while (mergedCurValues.length !== size) {\r\n        mergedCurValues.unshift(\"\");\r\n      }\r\n      row.forEach((ele, index) => (ele.value = mergedCurValues[index]));\r\n    });\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n      tempNew.push(...rows[i]);\r\n    }\r\n    for (let i = 1; i <= size; i++) {\r\n      for (let j = 1; j <= size; j++) {\r\n        newBoard.push(tempNew.find((ele) => ele.row === i && ele.col === j));\r\n      }\r\n    }\r\n    if (!_.isEqual(oldBoard, newBoard)) {\r\n      const changeThisIndex = allBoards.findIndex((ele) => ele.size === size);\r\n      allBoards[changeThisIndex].board = newBoard;\r\n      allBoards[changeThisIndex].history.push(oldBoard);\r\n      if (allBoards[changeThisIndex].history.length > 5) {\r\n        allBoards[changeThisIndex].history.shift();\r\n      }\r\n      this.setState(\r\n        () => {\r\n          return { allBoards };\r\n        },\r\n        () => {\r\n          window.localStorage.setItem(\"allBoards\", JSON.stringify(allBoards));\r\n          if (allBoards[changeThisIndex].needToWin) {\r\n            this.checkForWin();\r\n          } else {\r\n            this.addRandomNumber();\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n  addRandomNumber = () => {\r\n    // change this to change probability of new number.\r\n    const newNumber = [2, 2, 2, 2, 4];\r\n    const allBoards = JSON.parse(JSON.stringify(this.state.allBoards));\r\n    const newBoard = allBoards.find((ele) => ele.size === this.state.gridSize)\r\n      .board;\r\n\r\n    const options = newBoard.filter((block) => !block.value);\r\n    const optionsIndex = Math.floor(Math.random() * options.length);\r\n    const changeThisElement = options[optionsIndex];\r\n    // this seems redundant now. i didn't know about references before :(\r\n    const indexOfChangedElement = newBoard.findIndex(\r\n      (ele) =>\r\n        ele.row === changeThisElement.row && ele.col === changeThisElement.col\r\n    );\r\n    newBoard[indexOfChangedElement].value =\r\n      newNumber[Math.floor(Math.random() * newNumber.length)];\r\n    const sum = _.sumBy(\r\n      newBoard.filter((ele) => ele.value),\r\n      \"value\"\r\n    );\r\n\r\n    const changeThisIndex = allBoards.findIndex(\r\n      (ele) => ele.size === this.state.gridSize\r\n    );\r\n    allBoards[changeThisIndex].board = newBoard;\r\n    allBoards[changeThisIndex].sum = sum;\r\n    allBoards[changeThisIndex].best =\r\n      sum > allBoards[changeThisIndex].best\r\n        ? sum\r\n        : allBoards[changeThisIndex].best;\r\n    this.setState(\r\n      () => {\r\n        return {\r\n          allBoards,\r\n        };\r\n      },\r\n      () => {\r\n        window.localStorage.setItem(\"allBoards\", JSON.stringify(allBoards));\r\n      }\r\n    );\r\n  };\r\n  handleReset = () => {\r\n    const allBoards = JSON.parse(JSON.stringify(this.state.allBoards));\r\n    const board = allBoards.find((ele) => ele.size === this.state.gridSize)\r\n      .board;\r\n    board.forEach((block) => {\r\n      block.value = \"\";\r\n    });\r\n    const changeThisIndex = allBoards.findIndex(\r\n      (ele) => ele.size === this.state.gridSize\r\n    );\r\n    allBoards[changeThisIndex].board = board;\r\n    allBoards[changeThisIndex].needToWin = true;\r\n    allBoards[changeThisIndex].history = [];\r\n    this.setState({ allBoards }, () => {\r\n      window.localStorage.setItem(\"allBoards\", JSON.stringify(allBoards));\r\n      this.startGame();\r\n    });\r\n  };\r\n  handleUndo = () => {\r\n    const allBoards = JSON.parse(JSON.stringify(this.state.allBoards));\r\n    const curBoard = allBoards.find((ele) => ele.size === this.state.gridSize);\r\n    curBoard.board = curBoard.history.pop();\r\n    const sum = _.sumBy(\r\n      curBoard.board.filter((ele) => ele.value),\r\n      \"value\"\r\n    );\r\n    curBoard.sum = sum;\r\n    this.setState({ allBoards }, () => {\r\n      window.localStorage.setItem(\"allBoards\", JSON.stringify(allBoards));\r\n    });\r\n  };\r\n  checkForWin = () => {\r\n    const allBoards = JSON.parse(JSON.stringify(this.state.allBoards));\r\n    const board = allBoards.find((ele) => ele.size === this.state.gridSize);\r\n    if (board.board.some((block) => block.value === board.winCondition)) {\r\n      board.needToWin = false;\r\n      this.setState(\r\n        () => {\r\n          return { allBoards, winDialog: true };\r\n        },\r\n        () => {\r\n          window.localStorage.setItem(\"allBoards\", JSON.stringify(allBoards));\r\n        }\r\n      );\r\n    } else {\r\n      this.addRandomNumber();\r\n    }\r\n  };\r\n  handleDialogClose = () => {\r\n    this.setState(() => {\r\n      return { winDialog: false };\r\n    }, this.addRandomNumber);\r\n  };\r\n  render = () => {\r\n    let allBoardsWithCurrentGridSize = this.state.allBoards.find(\r\n      (ele) => ele.size === this.state.gridSize\r\n    );\r\n    return (\r\n      <Swipeable onSwiped={this.handleInput}>\r\n        <div className=\"Game\" tabIndex={0} onKeyDown={this.handleInput}>\r\n          <TitleRow\r\n            winCondition={allBoardsWithCurrentGridSize.winCondition}\r\n            sum={allBoardsWithCurrentGridSize.sum}\r\n            best={allBoardsWithCurrentGridSize.best}\r\n          />\r\n          <div className=\"Game-secondRow\">\r\n            <Selector handleChangeGrid={this.handleChangeGrid} />\r\n            <Commands\r\n              numberOfUndos={allBoardsWithCurrentGridSize.history.length}\r\n              handleReset={this.handleReset}\r\n              handleUndo={this.handleUndo}\r\n            />\r\n          </div>\r\n\r\n          <Board\r\n            size={this.state.gridSize}\r\n            board={allBoardsWithCurrentGridSize.board}\r\n          />\r\n        </div>\r\n        {isBrowser && (\r\n          <Snackbar\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"left\",\r\n            }}\r\n            open={this.state.snackbar}\r\n            autoHideDuration={6000}\r\n            onClose={this.handleSnackbarClose}\r\n            message=\"Use AWSD or Arrow Keys to Play.\"\r\n            action={\r\n              <React.Fragment>\r\n                <IconButton\r\n                  size=\"small\"\r\n                  aria-label=\"close\"\r\n                  color=\"inherit\"\r\n                  onClick={this.handleSnackbarClose}\r\n                >\r\n                  <CloseIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </React.Fragment>\r\n            }\r\n          />\r\n        )}\r\n        <Dialog\r\n          open={this.state.winDialog}\r\n          onClose={this.handleDialogClose}\r\n          aria-labelledby=\"alert-win-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"alert-win-dialog-title\">You Win!</DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={this.handleReset} color=\"primary\">\r\n              Reset\r\n            </Button>\r\n            <Button onClick={this.handleDialogClose} color=\"primary\" autoFocus>\r\n              Keep Playing\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Swipeable>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component } from \"react\";\nimport Game from \"./Game\";\nimport \"./stylesheets/App.css\";\n\nclass App extends Component {\n  render = () => {\n    return (\n      <div className=\"App\">\n        <Game />\n      </div>\n    );\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheets/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}